<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ZechariahZheng&#39;s Blog</title>
    <link>https://ZechariahZheng.github.io/</link>
    <description>Recent content on ZechariahZheng&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Sun, 21 Feb 2021 15:38:22 +0800</lastBuildDate><atom:link href="https://ZechariahZheng.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>树莓派安装pi-apps、box86、wine</title>
      <link>https://ZechariahZheng.github.io/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85pi-appsbox86wine/</link>
      <pubDate>Sun, 21 Feb 2021 15:38:22 +0800</pubDate>
      
      <guid>https://ZechariahZheng.github.io/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85pi-appsbox86wine/</guid>
      <description>树莓派安装pi-apps、box86、wine 1、安装Pi-Apps
git clone https://github.com/Botspot/pi-apps ~/pi-apps/install 2、安装box86
git clone https://github.com/ptitSeb/box86 cd box86 mkdir build; cd build; cmake .. -DRPI4=1 -DCMAKE_BUILD_TYPE=RelWithDebInfo make -j4 sudo make install sudo systemctl restart systemd-binfmt For Pi4. Change to RPI2 or RPI3 for other models.
3、安装wine
# Download Wine cd ~/Downloads wget https://dl.winehq.org/wine-builds/debian/dists/buster/main/binary-i386/wine-devel_5.21~buster_i386.deb wget https://dl.winehq.org/wine-builds/debian/dists/buster/main/binary-i386/wine-devel-i386_5.21~buster_i386.deb dpkg-deb -xv wine-devel-i386_5.21~buster_i386.deb wine-installer dpkg-deb -xv wine-devel_5.21~buster_i386.deb wine-installer # Install Wine sudo mv wine-installer/opt/wine-devel ~/wine sudo ln -s ~/wine/bin/wine /usr/local/bin/wine sudo ln -s ~/wine/bin/winecfg /usr/local/bin/winecfg sudo ln -s ~/wine/bin/wineserver /usr/local/bin/wineserver # Boot Wine  wine wineboot # Download Winetricks cd ~/Downloads wget https://raw.</description>
    </item>
    
    <item>
      <title>树莓派FreePBX设置电话系统</title>
      <link>https://ZechariahZheng.github.io/posts/%E6%A0%91%E8%8E%93%E6%B4%BEfreepbx%E8%AE%BE%E7%BD%AE%E7%94%B5%E8%AF%9D%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Sun, 21 Feb 2021 15:36:36 +0800</pubDate>
      
      <guid>https://ZechariahZheng.github.io/posts/%E6%A0%91%E8%8E%93%E6%B4%BEfreepbx%E8%AE%BE%E7%BD%AE%E7%94%B5%E8%AF%9D%E7%B3%BB%E7%BB%9F/</guid>
      <description>树莓派FreePBX设置电话系统 1、下载RasPBX系统，烧入到sd卡中。使用的版本raspbx-04-04-2018
2、在浏览器中输入树莓派的IP地址
3、创建分机，按照以下步骤：
先创建一个超级用户
登录
创建分机
按照此种方式创建多个用户即可，但是测试的话最好使用手机与手机，或者手机与sip电话。手机与电脑的话，可能没有声音。
测试软件linephone
4、外网访问，最好拥有公网ip。没有的话，使用蒲公英x1盒子也可以，但是盒子必须配置为旁路由模式。
参考：
https://shumeipai.nxez.com/2018/03/28/voip-server-raspberry-pi-phone-system.html
https://www.cnblogs.com/kexxxfeng/p/freepbx-sip.html</description>
    </item>
    
    <item>
      <title>ArchLinux三部曲之三——美化</title>
      <link>https://ZechariahZheng.github.io/posts/archlinux%E4%B8%89%E9%83%A8%E6%9B%B2%E4%B9%8B%E4%B8%89%E7%BE%8E%E5%8C%96/</link>
      <pubDate>Sat, 06 Feb 2021 12:07:19 +0800</pubDate>
      
      <guid>https://ZechariahZheng.github.io/posts/archlinux%E4%B8%89%E9%83%A8%E6%9B%B2%E4%B9%8B%E4%B8%89%E7%BE%8E%E5%8C%96/</guid>
      <description>ArchLinux三部曲之三——美化 0、设置终端显示中文 之前所有的设置，没有设置终端显示中文，可以通过
locale -a #查看目前可以使用的locale
pacman -S wqy-bitmapfont wqy-zenhei #解决终端字体间隔过大 1、美化终端oh-my-zsh（Linux终端主题） 查看当前的使用的shell
echo $SHELL
查看系统是否安装了zsh
cat /etc/shells
参考：
https://www.cnblogs.com/lcgbk/p/13255836.html
2、安装chromium浏览器 pacman -S chromium 3、安装vs code pacman -S code 4、安装idea pacman -S intellij-idea-community-edition 5、安装QQ pacman -S archlinuxcn-keyring pacman -S linuxqq 6、安装网易云音乐 yay -S netease-cloud-music 7、安装wps yay -S wps-office-cn </description>
    </item>
    
    <item>
      <title>ArchLinux三部曲之二——基本应用安装</title>
      <link>https://ZechariahZheng.github.io/posts/archlinux%E4%B8%89%E9%83%A8%E6%9B%B2%E4%B9%8B%E4%BA%8C%E5%9F%BA%E6%9C%AC%E5%BA%94%E7%94%A8%E5%AE%89%E8%A3%85/</link>
      <pubDate>Sat, 06 Feb 2021 11:06:10 +0800</pubDate>
      
      <guid>https://ZechariahZheng.github.io/posts/archlinux%E4%B8%89%E9%83%A8%E6%9B%B2%E4%B9%8B%E4%BA%8C%E5%9F%BA%E6%9C%AC%E5%BA%94%E7%94%A8%E5%AE%89%E8%A3%85/</guid>
      <description>ArchLinux三部曲之二——基本应用安装 1、配置网络 ip link #查看网络接口 ip link set interface up|down #启用或禁用网络接口 dhcpcd ip a #查看分配的网络接口地址 2、安装桌面 pacman -S xorg #安装显示服务器 pacman -S xf86-video-intel #intel显卡驱动 pacman -S mesa xf86-video-nouveau #nvidia显卡驱动 pacman -S mesa xf86-video-amdgpu #amd显卡驱动 3、安装桌面环境 pacman -S xfce4 安装完成后还需要配置xinitrc文件来保证开机直接启动
4、安装显示管理器 pacman -S sddm systemctl enable sddm #添加开机自启 5、添加普通用户 useradd -m -G wheel usrname passwd username pacman -S foobar -m：在创建时同时在 /home 目录下创建一个与用户名同名的文件夹，这个目录就是你的家目录啦！家目录有一个别名是 ~，你可以在任何地方使用 ~ 来代替家目录路径。这个神奇的目录将会用于存放你所有的个人资料、配置文件等所有跟系统本身无关的资料。这种设定带来了诸多优点：
 只要家目录不变，你重装系统后只需要重新安装一下软件包（它们一般不存放在家目录），然后所有的配置都会从家目录中读取，完全不用重新设置软件着。 你可以在家目录不变的情况下更换你的发行版而不用重新配置你的环境。 切换用户后所有的设置会从新的用户的家目录中读取，将不同用户的资料与软件设置等完全隔离。 有些著名的配置文件比如vim的配置文件 ~/.vimrc，只要根据自己的使用习惯配置一次， 在另一个 Linux 系统下（例如你的服务器）把这个文件复制到家目录下，就可以完全恢复你的配置。  -G wheel：-G 代表把用户加入一个组</description>
    </item>
    
    <item>
      <title>ArchLinux三部曲之一——基础环境安装</title>
      <link>https://ZechariahZheng.github.io/posts/archlinux%E4%B8%89%E9%83%A8%E6%9B%B2%E4%B9%8B%E4%B8%80%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/</link>
      <pubDate>Wed, 03 Feb 2021 20:27:05 +0800</pubDate>
      
      <guid>https://ZechariahZheng.github.io/posts/archlinux%E4%B8%89%E9%83%A8%E6%9B%B2%E4%B9%8B%E4%B8%80%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/</guid>
      <description>0、使用rufus制作启动U盘 注：现在新的电脑一般都是UEFI启动，老电脑一般是bios启动。较直观的感受就是UEFI有较漂亮的界面
1、安装基本环境 过程相当于U盘启动了一个linux，重新给硬盘进行分区，下载配置一个新的Linux
执行以下步骤
# 查看系统是否是uefi还是bios启动 ls /sys/firmware/efi/efivars # 更改键盘布局（非必选） loadkeys layout # 检查网络是否连通 ping -c 3 archlinux.org # 更新系统时间 timedatectl set-ntp true # 建立硬盘分区，并挂载 fdisk -l mkfs.ext4 /dev/sda1 mount /dev/sda1 /mnt # 更换镜像源 nano /etc/pacman.d/mirrorlist # 安装必须的软件包 pacstrap /mnt # 配置系统 genfstab -U /mnt &amp;gt;&amp;gt; /mnt/etc/fstab # 进入到新的系统 arch-chroot /mnt /bin/bash # 更改时区 ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime hwclock --systohc --utc # 本地化设置 nano /etc/locale.gen locale-gen echo LANG=en_US.UTF-8 &amp;gt; /etc/locale.</description>
    </item>
    
    <item>
      <title>Hugo添加utterances评论</title>
      <link>https://ZechariahZheng.github.io/posts/hugo%E6%B7%BB%E5%8A%A0utterances%E8%AF%84%E8%AE%BA/</link>
      <pubDate>Wed, 13 Jan 2021 15:36:16 +0800</pubDate>
      
      <guid>https://ZechariahZheng.github.io/posts/hugo%E6%B7%BB%E5%8A%A0utterances%E8%AF%84%E8%AE%BA/</guid>
      <description>参考：https://www.yuque.com/shenweiyan/cookbook/fl1z7t
因为是用 Hugo 搭建的博客，所以只看中了三个评论系统：1、Disqus 2、Valine 3、Utterances
说下三者区别：
  Disqus
   优点：漂亮，hugo 自带，官方文档中有写如何启动，直接在 config.toml 文件中启用就可以用。 缺点：广告多，国外的，容易被墙。    Valine
   官方的介绍说，是一款快速、简洁且高效的无后端评论系统。对于第三方评论系统，经历了多说关闭的影响，不太敢用。具体如何本人的确也没用过，暂不评论。    Utterances
   优点：基于 GitHub issues 的评论工具，开源免费，加载快，配置较简单，没有广告，没有追踪（很多评论系统有追踪，感觉不是很尊重访客隐私）。 缺点：貌似不能在已经发表的评论中追加评论。    好像三个都支持 Markdown 。
1. 创建公开的仓库 在 github 创建一个公开的仓库。
2. 安装 utterances app 通过 https://utteranc.es/ 主页的 configuration → Repository 进入 utterances app 主页（或者直接在浏览器输入 https://github.com/apps/utterances 进入）。
3. 配置 utterances utterances app 安装完成后，回到 https://utteranc.</description>
    </item>
    
    <item>
      <title>玩客云安装Octoprint</title>
      <link>https://ZechariahZheng.github.io/posts/%E7%8E%A9%E5%AE%A2%E4%BA%91%E5%AE%89%E8%A3%85octoprint/</link>
      <pubDate>Wed, 13 Jan 2021 12:42:15 +0800</pubDate>
      
      <guid>https://ZechariahZheng.github.io/posts/%E7%8E%A9%E5%AE%A2%E4%BA%91%E5%AE%89%E8%A3%85octoprint/</guid>
      <description>0、玩客云刷机Armbian ​	玩客云刷机网上有许多教程，但大部分都是先刷安卓底包，然后在uboot中修改启动项，从刷入Armbian的U盘启动，再写入玩客云的emmc。但可能是我的玩客云不是1.3版本，是老版本。刷入之后一直网卡一直不能获取IP地址，后来重新刷了几次。玩客云的串口直接坏了，输出一直乱码，根本无法中断uboot的启动。后面在恩山论坛找到了直刷Armbian的包，直接使用线刷工具刷入便可以了，由于只是安装Octoprint不考虑这个Armbian版本只是5.6.7，应该是网卡的驱动不支持千兆的，但是本着能用就行的目的。该包的刷入，不需要usb ttl串口器，直接刷入即可。
​	直刷包下载地址【访问码：7faw】，直刷包来自Q群：612500698
​	恩山论坛原帖链接
1、安装python ​	以下的操作，都是在玩客云安装Armbian5.6.7的基础之上。
1.1 安装python等包 apt install python-setuptools python-dev build-essential -y 1.2 安装pip ​	由于直接使用apt安装的pip无法使用（版本太老了），需下载pip源码解压，再进行安装。源码官网无法下载，我放在了gitee上。
wget https://gitee.com/ZechariahZheng/wan-ke-install-octoprint/attach_files/587178/download/pip-20.3.3.tar.gz tar -xzvf pip-20.3.3.tar.gz	#解压 cd pip-20.3.3 python setup.py install	#安装 #解决usr/bin/pip: No such file or directory which pip pip type pip hash -r 2、安装Octoprint #使用豆瓣源安装 pip install Octoprint -i http://pypi.douban.com/simple --trusted-host pypi.douban.com 以上步骤全部以root权限运行，写了一个脚本但未运行校验，也可以下载下来复制粘贴。下载
3、创建一个普通用户，并赋予访问/dev/ttyUSBx的权限 sudo adduser xxx	#已创建普通用户则跳过该步 sudo usermod -gG dialout xxx	#xxx是用户名 4、启动测试 octoprint serve	#普通用户执行 5、添加开机自启 sudo sed -i &amp;#39;$i\su xxx -c &amp;#34;octorpint serve&amp;#34;&amp;#39; /etc/rc.</description>
    </item>
    
    <item>
      <title>OrangePi_OnePlus安装Octoprint</title>
      <link>https://ZechariahZheng.github.io/posts/orangepi_oneplus%E5%AE%89%E8%A3%85octoprint/</link>
      <pubDate>Fri, 08 Jan 2021 09:59:24 +0800</pubDate>
      
      <guid>https://ZechariahZheng.github.io/posts/orangepi_oneplus%E5%AE%89%E8%A3%85octoprint/</guid>
      <description>Octoprint作为一个运行在Linux系统上的开源套件，可以为普通的3D打印机添加强大的外围管理功能。这个可以自行搜索一下，网上基本上都是树莓派安装Octoprint，但是香橙派相较于树莓派非常具有性价比。按照以下思路，香橙派或者其他任何linux板都是可以安装octoprint的。
 安装CH340/341驱动 安装Octoprint  第一步详见：该篇文章，也可以自行编译CH340驱动，这是官方linux驱动
第二步的OrangePiOnePlus操作如下：
apt install gcc	#安装gcc apt install python-dev apt install python	#安装python apt install python-pip	#安装pip工具 pip install python-setuptools apt install octoprint	#安装octoprint octoprint serve	#默认运行在5000端口 按照需求添加开机自启动即可。</description>
    </item>
    
    <item>
      <title>Hugo和Github Actions搭建一个blog</title>
      <link>https://ZechariahZheng.github.io/posts/hugo%E5%92%8Cgithub-actions%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAblog/</link>
      <pubDate>Wed, 06 Jan 2021 09:58:07 +0800</pubDate>
      
      <guid>https://ZechariahZheng.github.io/posts/hugo%E5%92%8Cgithub-actions%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAblog/</guid>
      <description>0、下载hugo 下载包之后，直接解压，添加到环境变量中即可。
1、安装hugo 可以使用荒野无灯的vscode中的插件: hugofy，插件使用
详见：https://nanodm.net/post/misc/build-a-hugo-blog-in-one-second-with-vscode/
2、hugo使用 新建站点命令：hugo new site blog 新建站点后进入 blog 目录，查看生成的文件及主要目录
archetypes 目录下会有个模板文件，新生成的文章会以此为模板
config.toml 网站配置文件
content 用来存放 Markdown 文件
layouts 存放 html 模板文件，如果使用了第三方模板，可以将 themes 里 layouts 目录下的 html 复制过来，然后在这里修改，hugo 会优先使用这个目录下的该文件，以后再更新 themes 下的模板文件时也不用担心文件冲突问题
data 存储数据文件供模板使用
public 生成的静态网站文件会放在这里
static 可以把图片等静态资源放这里
themes 存放网站主题文件
来自 https://lijingcheng.github.io/posts/hugo/
安装主题 Hugo 整理了很多开发者制作的主题，安装时直接将主题下载到刚创建的 themes 目录中就可以了，具体方式可参考各主题的介绍说明
cd blog git init git submodule add https://github.com/vaga/hugo-theme-m10c.git themes/m10c 来自 https://lijingcheng.github.io/posts/hugo/
修改 config.toml
baseURL = &amp;ldquo;https://ZechariahZheng.github.io/&amp;quot;
languageCode = &amp;ldquo;zh-Hans&amp;rdquo;
title = &amp;ldquo;ZechariahZheng&amp;rsquo;s Blog&amp;rdquo;</description>
    </item>
    
    <item>
      <title>OrangePi_OnePlus安装ch340驱动</title>
      <link>https://ZechariahZheng.github.io/posts/orangepi_oneplus%E5%AE%89%E8%A3%85ch340%E9%A9%B1%E5%8A%A8/</link>
      <pubDate>Tue, 05 Jan 2021 20:43:33 +0800</pubDate>
      
      <guid>https://ZechariahZheng.github.io/posts/orangepi_oneplus%E5%AE%89%E8%A3%85ch340%E9%A9%B1%E5%8A%A8/</guid>
      <description>CH340/341 UART DRIVER for OrangePi OrangePi官网下载的img不自带串口驱动，可以自己编译img时在内核编译勾选USB串口驱动，或者手动编译安装驱动模块。
1、内核编译选项
--&amp;gt;[*] device driver ​	--&amp;gt;[*] USB support ​	--&amp;gt;[*] USB Serial Converter support ​	--&amp;gt;[*] USB Serial Simple Driver ​	--&amp;gt;[*] USB Winchiphead CH341 Single Port Serial Driver  2、手动编译
需要安装linux-header，但香橙派的内核不是官方的，这是我提供的OrangePiOne的镜像（提取码：40rq）和对应的linux-header
注：该内核已经安装了CH340/341驱动。
git clone https://gitee.com/ZechariahZheng/orange-pi_-one-plus_-ch340_-driver.git make 即可生成ch34x.ko文件，安装驱动
sudo insmod ch34x.ko </description>
    </item>
    
    <item>
      <title>新路由3详细刷机教程</title>
      <link>https://ZechariahZheng.github.io/posts/%E6%96%B0%E8%B7%AF%E7%94%B13%E8%AF%A6%E7%BB%86%E5%88%B7%E6%9C%BA%E6%95%99%E7%A8%8B/</link>
      <pubDate>Tue, 05 Jan 2021 20:43:33 +0800</pubDate>
      
      <guid>https://ZechariahZheng.github.io/posts/%E6%96%B0%E8%B7%AF%E7%94%B13%E8%AF%A6%E7%BB%86%E5%88%B7%E6%9C%BA%E6%95%99%E7%A8%8B/</guid>
      <description>新路由3详细刷机教程 第一步刷入breed 准备工作 1.新三路由器 2.一条网线 3.breed固件包，和要刷的固件包（新三的固件有：老毛子 潘多拉 高恪…） 4.软件：WinSCP , putty 链接： breed工具
开始刷入breed 首先将网线一端连在电脑上，另一端连接路由器的lan口（四个颜色相同的，任意一个），连接路由电源， 进入新路由器的管理页面，打开浏览器在地址栏输入（192.168.99.1）， 配置路由器，设置管理员密码，（自己随意设置，例如12345678，但是一定要记牢，后面刷路由时要用。） 开启ssh：在地址栏输入：http://192.168.99.1/newifi/ifiwen_hss.html如果页面显示 success 即表明已开启 ssh。
breed以前已经刷过，故不详细介绍了**
刷入固件 一定要先按着复位键或者usb旁的键，再插电，按着四五秒钟等待路由器的信号灯全部闪烁后松手，打开浏览器，地址栏输入192.168.1.1 就可以进入breed了。如果进不去那么进下图中设置使用下面IP地址
进入breed后，点击固件备份，先把原固件还有原EEPROM进行备份，然后点击固件更新，固件前打对号，然后选择文件（把要刷的固件包点击打开就行了）这里是B站大佬的固件包 提取码：bhua。 刷完 固件等待路由器重启就可以了，进入路由器后台管理页面，（一般都是192.168.1.1或192.168.2.1，最好是联网进入网络共享中心查看一下ip地址）。 固件的登录账号一般都是root 密码一般都是admin或者password，不知道就去百度一下，问一下自己固件的原始登录密码。 接下来就可以设置自己喜欢的功能了。</description>
    </item>
    
  </channel>
</rss>
